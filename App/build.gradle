apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

apply from: "$rootDir/tools/ktlint.gradle"

android {
    final versions = project.ext

    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId = "com.watched"

        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.appVersionCode
        versionName versions.appVersionName

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    Properties properties = new Properties()
    def propertiesFile = project.rootProject.file('local.properties')
    if (propertiesFile.exists()) {
        properties.load(propertiesFile.newDataInputStream())
    }
    def apiKey = properties.API_KEY != null ? properties.API_KEY : "null"

    def baseImageUrl = '"https://image.tmdb.org/t/p/"'

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'API_KEY', apiKey
            buildConfigField 'String', 'BASE_IMAGE_URL', baseImageUrl
        }

        staging {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'API_KEY', apiKey
            buildConfigField 'String', 'BASE_IMAGE_URL', baseImageUrl
        }

        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'API_KEY', apiKey
            buildConfigField 'String', 'BASE_IMAGE_URL', baseImageUrl
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test {
            java.srcDirs += 'src/test/kotlin'
            java.srcDirs += 'src/commonTest/kotlin'
        }
        androidTest {
            java.srcDirs += 'src/androidTest/kotlin'
            java.srcDirs += 'src/commonTest/kotlin'
        }
    }

    testOptions {
        animationsDisabled true

        unitTests.includeAndroidResources true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

    dynamicFeatures = [":movie"]

}

dependencies {
    api project(":Domain")
    api project(":Data")
    api project(":Data-Local")
    api project(":Data-Remote")

    // AndroidX
    api "androidx.appcompat:appcompat:$ax_versions.foundation_appcompat"
    api "androidx.constraintlayout:constraintlayout:$ax_versions.ui_constraintlayout"
    api "androidx.core:core-ktx:$ax_versions.foundation_ktx_core"
    api "androidx.fragment:fragment-ktx:$ax_versions.foundation_ktx_fragment"
    api "androidx.lifecycle:lifecycle-common-java8:$ax_versions.foundation_ktx_lifecycle"
    api "androidx.lifecycle:lifecycle-extensions:$ax_versions.foundation_ktx_lifecycle"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$ax_versions.foundation_ktx_lifecycle"
    api "androidx.recyclerview:recyclerview:$ax_versions.ui_recyclerview"

    // Coil
    api "io.coil-kt:coil:$versions.coil"

    // Dagger
    api "com.google.dagger:dagger:$versions.dagger"
    api "com.google.dagger:dagger-android:$versions.dagger"
    api "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    // Kotlin
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    api "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    // Material Design
    api "com.google.android.material:material:$versions.material"

    // Navigation
    api "androidx.navigation:navigation-fragment-ktx:$ax_versions.arch_navigation"
    api "androidx.navigation:navigation-ui-ktx:$ax_versions.arch_navigation"
    api "androidx.navigation:navigation-dynamic-features-fragment:$ax_versions.arch_navigation"

    // Paging
    api "androidx.paging:paging-runtime-ktx:$ax_versions.arch_paging"
    api "androidx.paging:paging-rxjava2-ktx:$ax_versions.arch_paging"

    // ThreeTen ABP
    api "com.jakewharton.threetenabp:threetenabp:$versions.threetenabp"

    // Timber
    api "com.jakewharton.timber:timber:$versions.timber"

    androidTestImplementation project(":Common:Test")
    androidTestImplementation "io.mockk:mockk-android:$versions.mockk"
    androidTestImplementation "androidx.test:core:$ax_versions.foundation_test_core"
    //noinspection GradleDependency
    androidTestImplementation "androidx.arch.core:core-testing:$ax_versions.arch_core_testing"
    //Suppressing this warning because 2.1.0 conflicts with room-rxjava2 versions.
    //noinspection GradleDependency
    androidTestImplementation "androidx.arch.core:core-runtime:$ax_versions.arch_core_testing"
    androidTestImplementation "androidx.test:runner:$ax_versions.foundation_test_runner"
    androidTestImplementation "androidx.test:rules:$ax_versions.foundation_test_rules"
    androidTestImplementation "androidx.test.ext:junit:$ax_versions.foundation_test_ext_junit"

    testImplementation project(":Common:Test")
    testImplementation project(":Common:Test-Android")
    testImplementation "junit:junit:$versions.junit"
    testImplementation "io.mockk:mockk:$versions.mockk"
}

configurations {
    appTestDependencies.extendsFrom testImplementation
    appAndroidTestDependencies.extendsFrom androidTestImplementation
}

